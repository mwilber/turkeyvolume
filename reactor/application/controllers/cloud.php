<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Cloud extends CI_Controller
{
	var $profile = array(
        'model' => 'cloud_model',
        );

	// Create
	function add($pFormat="html")
	{
		header('Access-Control-Allow-Origin: *');
		$model_ref = $this->profile['model'];
		$this->load->model($model_ref);

		$response = new stdClass();
		$response->status = 1;

		$data['format'] = $pFormat;
		$data['fields'] = $this->$model_ref->_fields();
		$data['lookups'] = array();

		foreach( $this->$model_ref->_fields() as $name=>$props ){
			if(substr_compare($name, 'Id', -2, 2) === 0){
				if(file_exists(APPPATH."models/".substr($name, 0, -2)."_model.php")){
					// Load up dropdown menu data for join fields
					$modelName = substr($name, 0, -2)."_model";
					$this->load->model($modelName);
					$data['lookups'][$name] = $this->$modelName->_GetRef();
				}
			}
		}

		$share = array();

    	if( isset($_POST['checkinTwitter']) ){
    		if($_POST['checkinTwitter'] == 1){
    			$share['Twitter'] = 1;
    		}
    		unset($_POST['checkinTwitter']);
    	}

		unset($_POST['decoy']);

	    // Validate form
	    $this->form_validation->set_rules($this->$model_ref->_rq(), 'required', 'trim|required');

	    if($this->form_validation->run())
	    {


			//////////////////////////////////////////////////////////////////////
	    	// Do any record preprocessing here
	    	//////////////////////////////////////////////////////////////////////

			if( $_POST['cloudImage'] != "" ){

				$imageData = explode('base64,',$_POST['cloudImage']);
				$imageData = $this->$model_ref->manageFile64($imageData[1], UPLOAD_DIR, '');

				// Image processing code from TPI. Scales and crops the image to square
//	    		$imageData = $this->$model_ref->manageFile64($_POST['checkinPhoto'], UPLOAD_DIR);
//
//				//Process the image here
//				$this->load->helper('ImageWorkshop');
//				$twitterLayer = new ImageWorkshop(array(
//				    'imageFromPath' => UPLOAD_DIR."/".$imageData,
//				));
//
//				// Resize the image so the smallest dimension equals the desired dimension
//				if( $twitterLayer->getWidth() > $twitterLayer->getHeight() ){
//					$twitterLayer->resizeInPixel(null, 1024, true);
//				}else{
//					$twitterLayer->resizeInPixel(1024, null, true);
//				}
//				$twitterLayer->cropInPixel(1024, 1024, 0, 0, 'MM');
//
//				$image = $twitterLayer->getResult();
//
//				//header('Content-type: image/jpeg');
//				//imagejpeg($image, null, 95); // JPG with a quality of 95%
//				$twitterLayer->save(UPLOAD_DIR."/", $imageData, CREATE_FOLDERS, BACKGROUND_COLOR, JPEG_IMAGE_QUALITY);
//
				$this->load->library('s3');
				$_POST['cloudImage'] = $this->s3->upload(UPLOAD_DIR."/".$imageData, $imageData);
	    	}else{
	    		//$_POST['checkinPhoto'] = "http://s3.amazonaws.com/tpiapp/1391282507_107.jpg";
	    		//$_POST['checkinPhoto'] = "/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcU FhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgo KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAMABAADASIA AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3 ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3 uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5nIOG 4zSBgBzx9RS8AccilPJOeAKgsYCdvtTwSp4BppAHJ70pGB6GgQg4HPWlx/dz160mRk8447UvTvTK QqklTnqe4oHUAYA9aWMfKc9PWmnryaAFz83TIoUgZ3dc9KOoz1z+tAHYUEjAowM8mlIySOfelyM9 aaAT0pAOTJHHP9abjOeOMd+1OGBnHQUg5ODigBD0HPfilU9z09DSdqcoOD0x70AIOB0/GkIP407q MdR70mMDg80rAIGI3ccdKAO+etHc4HHelXIzn8famgsNGc9fen4HYnOaaOnXPFKMe4xSYgOT1FA+ 9xn8KAc8Hr1oA49xQhoRcjgnFBzyTk5oXAXAPNAGBzjmmAvGMYOaaQAetLjnjt3pSoyB29aAGDrm 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 AJpM8YzT";
	    	}


	        // Validation passes
	        $nId = $this->$model_ref->Add($_POST);
	        $response->id = $nId;

	        // Verify the record is there
        	$data['record'] = $this->$model_ref->Get(array($this->$model_ref->_pk() => $nId));

        	$this->load->model('auth_model');
        	//$this->load->model('prize_model');
			$this->load->helpers('idobfuscator_helper');
        	$authRecs = $this->auth_model->Get(array('profileId'=>$_POST['profileId']));
        	//$prizeRec = $this->prize_model->Get(array('prizeId'=>$_POST['prizeId']));

        	$prizeName = $_POST['cloudName'];

        	//if( isset($prizeRec->prizeName) ){
        	//	$prizeName = $prizeRec->prizeName;
        	//}

        	$prizeUrl = "http://www.cloud-artist.com/ck/".IdObfuscator::encode($nId);

        	foreach ($authRecs as $authRec) {
        		if( isset($share['Twitter']) ){
					switch ($authRec->authService) {
						case 'Facebook':
							$response->facebook = new stdClass();
							 $attachment =  array(
								 'access_token' => $authRec->authToken,
								 'message' => $_POST['cloudComment'],
								 'name' => $prizeName,
								 'link' => $prizeUrl,
								 'description' => 'Get the app and create your own cloud at Cloud-Artist.com',
								 'picture'=>$_POST['cloudImage'],
								 //'actions' => json_encode(array('name' => $action_name,'link' => $action_link))
								 );

							$response->facebook->attachment = $attachment;

							$ch = curl_init();
							curl_setopt($ch, CURLOPT_URL,'https://graph.facebook.com/me/feed');
							curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
							curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2);
							curl_setopt($ch, CURLOPT_POST, true);
							curl_setopt($ch, CURLOPT_POSTFIELDS, $attachment);
							curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);  //to suppress the curl output
							$result = curl_exec($ch);
							curl_close ($ch);

							$response->facebook->result = $result;

							break;

						case 'Twitter':
							$response->twitter = new stdClass();
							//$twitterTxt = "Check out my ".$prizeName." on The Prize Inside";
							$twitterTxt = "";
							if( $_POST['cloudComment'] != "" ) $twitterTxt = $_POST['cloudComment'];

							// Reduce to 110 chars
							if(strlen($twitterTxt) > 110) substr($twitterTxt,0,105).'...';

							// Set tmhOAuth config object
							$tmhOAuthConfig = array(
							  'consumer_key'    => 'eGxn56PqJxBoizNIf4qQJa9FQ',
							  'consumer_secret' => '7GbgkKfZeSgnSikpKWYZJFp6CwJNjn4pY7cNKF0Vff29PjgPCM',
							  'user_token'      => $authRec->authToken,
							  'user_secret'     => $authRec->authSecret,
							);

							$this->load->library('TmhOAuth', $tmhOAuthConfig);
							$code="0";
							//echo '<br/>Making call: '.$code.'<br/>';
							$code = $this->tmhoauth->request(
								   'POST',
								   'https://api.twitter.com/1.1/statuses/update.json',
								   array(
						 //		    'media[]'  => "@{$outFile};type=image/jpeg;filename={$outFile}",
								     'status'   => $twitterTxt.": ".$prizeUrl
								   ),
								   true, // use auth
								   true  // multipart
								 );

							$response->twitter->code = $code;
							$response->twitter->response = $this->tmhoauth->response;

							break;

						case 'Foursquare':
							$response->foursquare = new stdClass();
							if( $_POST['checkinLocation'] != "" ){

								 $attachment =  array(
									 'oauth_token' => $authRec->authToken,
									 'shout' => $_POST['cloudComment']." ".$prizeUrl,
									 'venueId' => $_POST['checkinLocation'],
									 'v' => '20140128',
									 //'actions' => json_encode(array('name' => $action_name,'link' => $action_link))
									 );

								$response->foursquare->attachment = $attachment;

								$ch = curl_init();
								curl_setopt($ch, CURLOPT_URL,'https://api.foursquare.com/v2/checkins/add');
								curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
								curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2);
								curl_setopt($ch, CURLOPT_POST, true);
								curl_setopt($ch, CURLOPT_POSTFIELDS, $attachment);
								curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);  //to suppress the curl output
								$result = curl_exec($ch);
								curl_close ($ch);

								$response->foursquare->response = $result;

							}

							break;

						default:

							break;
					}/*end switch */
				}
			}

			if($pFormat == "html"){
				if($nId)
		        {
		            $this->session->set_flashdata('flashConfirm', 'The item has been successfully added.');
		           redirect($this->uri->segment(1));
		        }
		        else
		        {
	                $this->session->set_flashdata('flashError', 'A database error has occured, please contact your administrator.');
		            redirect($this->uri->segment(1));
		        }
			}elseif($pFormat == "xml"){
				// TODO: see if we can redirect with flash
				//redirect($this->uri->segment(1)."/details/xml/".$nId);

				$this->details("xml", $nId);
			}else{
				//redirect($this->uri->segment(1)."/get/".$nId);
				header('Content-type: application/json');
				echo json_encode($response);
			}
	    }else{
	    	$this->load->view('template/template_head');
		    $this->load->view($this->uri->segment(1).'/'.$this->uri->segment(1).'_add_form', $data);
			$this->load->view('template/template_foot');
	    }
	}

    // Retrieve
	function index($pFormat="html")
	{
		$model_ref = $this->profile['model'];
		$this->load->model($model_ref);

		$data['total_rows'] = $this->$model_ref->Get(array('count' => true));
		$data['records'] = $this->$model_ref->Get(array('sortBy'=>$this->$model_ref->_ds(),'sortDirection'=>'DESC'));
		$data['fields'] = $this->$model_ref->_fields();
		$data['pk'] = $this->$model_ref->_pk();

		if($pFormat == "html"){
			if( $this->session->userdata('userEmail') ){
				$this->load->view('template/template_head');
				$this->load->view($this->uri->segment(1).'/'.$this->uri->segment(1).'_index', $data);
				$this->load->view('template/template_foot');
			}else{
				redirect('admin/login');
			}

		}elseif($pFormat == "xml"){
			$this->load->view($this->uri->segment(1).'/'.$this->uri->segment(1).'_index_xml', $data);
		}


	}

	function detail($pId=0,$pFormat="html"){
		$model_ref = $this->profile['model'];
		$this->load->model($model_ref);
		$data['record'] = $this->$model_ref->Get(array($this->$model_ref->_pk()=>$pId));

		if( $pFormat=='json' ){
			header('Content-type: application/json');
			echo json_encode($data['record']);
		}elseif( $pFormat=='html' ){
			echo '<ul>';
			foreach(get_object_vars($data['record']) as $field=>$value){
				echo "<li>{$field}: {$value}</li>";
			}
			echo '</ul>';
		}
	}


	function csv($pFormat="html")
	{
		$model_ref = $this->profile['model'];
		$this->load->model($model_ref);


		$data['total_rows'] = $this->$model_ref->Get(array('count' => true));
		$data['records'] = $this->$model_ref->Get(array('sortBy'=>$this->$model_ref->_ds(),'sortDirection'=>'ACS'));
		$data['fields'] = $this->$model_ref->_fields();
		$data['pk'] = $this->$model_ref->_pk();

		$header = "";
		$filedata = "";
		foreach($data['records'][0] as $name=> $value)
		{
		    $header .= $name . "\t";
		}

		foreach($data['records'] as $row)
		{
		    $line = '';
		    foreach( $row as $value )
		    {
		        if ( ( !isset( $value ) ) || ( $value == "" ) )
		        {
		            $value = "\t";
		        }
		        else
		        {
		            $value = str_replace( '"' , '""' , $value );
		            $value = '"' . $value . '"' . "\t";
		        }
		        $line .= $value;
		    }
		    $filedata .= trim( $line ) . "\n";
		}
		$filedata = str_replace( "\r" , "" , $filedata );

		if ( $filedata == "" )
		{
		    $filedata = "\n(0) Records Found!\n";
		}

		header("Content-type: application/octet-stream");
		header("Content-Disposition: attachment; filename=".$this->uri->segment(1)."_export.xls");
		header("Pragma: no-cache");
		header("Expires: 0");
		print "$header\n$filedata";



	}


	function paginated($offset = 0)
	{
		$model_ref = $this->profile['model'];
		$this->load->model($model_ref);

	    $this->load->library('pagination');

	    $perpage = 10;

	    $config['base_url'] = base_url() . $this->uri->segment(1).'/index/';
	    $config['total_rows'] = $this->$model_ref->Get(array('count' => true));
	    $config['per_page'] = $perpage;
	    $config['uri_segment'] = 3;

	    $this->pagination->initialize($config);

	    $data['pagination'] = $this->pagination->create_links();

		$data[$this->uri->segment(1)] = $this->$model_ref->Get(array('sortBy'=>'order','sortDirection'=>'ASC','limit' => $perpage, 'offset' => $offset));
		$data['fields'] = $this->$model_ref->_fields();
		$data['pk'] = $this->$model_ref->_pk();

		$this->load->view('template/template_head');
		$this->load->view($this->uri->segment(1).'/'.$this->uri->segment(1).'_paginated', $data);
		$this->load->view('template/template_foot');

	}

	// Update
	function edit($recordId)
	{
		$model_ref = $this->profile['model'];
		$this->load->model($model_ref);

		$data['fields'] = $this->$model_ref->_fields();
		$data['pk'] = $this->$model_ref->_pk();
		$data['rq'] = $this->$model_ref->_rq();

		$data['lookups'] = array();

		foreach( $this->$model_ref->_fields() as $name=>$props ){
			if(substr_compare($name, 'Id', -2, 2) === 0){
				if(file_exists(APPPATH."models/".substr($name, 0, -2)."_model.php")){
					// Load up dropdown menu data for join fields
					$modelName = substr($name, 0, -2)."_model";
					$this->load->model($modelName);
					$data['lookups'][$name] = $this->$modelName->_GetRef();
				}
			}
		}

		$data['record'] = $this->$model_ref->Get(array($this->$model_ref->_pk() => $recordId));
	    if(!$data['record']) redirect($this->uri->segment(1));

		// Validate form
	    $this->form_validation->set_rules($this->$model_ref->_rq(), 'required', 'trim|required');

	    if($this->form_validation->run())
		{
	        // Validation passes
	        $_POST[$this->$model_ref->_pk()] = $recordId;

	        if($this->$model_ref->Update($_POST))
	        {
	            $this->session->set_flashdata('flashConfirm', 'The user has been successfully updated.');
	            redirect($this->uri->segment(1));
	        }
	        else
	        {
                $this->session->set_flashdata('flashError', 'A database error has occured, please contact your administrator.');
	            redirect($this->uri->segment(1));
	        }
	    }

		$this->load->view('template/template_head');
		$this->load->view($this->uri->segment(1).'/'.$this->uri->segment(1).'_edit_form', $data);
		$this->load->view('template/template_foot');
	}

	// Delete
	function delete($recordId)
	{
		$model_ref = $this->profile['model'];
		$this->load->model($model_ref);

	    $data['record'] = $this->$model_ref->Get(array($this->$model_ref->_pk() => $recordId));
	    if(!$data['record']) redirect($this->uri->segment(1));

	    $this->$model_ref->Delete($recordId);

	    $this->session->set_flashdata('flashConfirm', 'The user has been successfully deleted.');
	    redirect($this->uri->segment(1));
	}

	function get($recordId)
	{
		$model_ref = $this->profile['model'];
		$this->load->model($model_ref);
		$this->load->model('profile_model');
		$this->load->helpers('idobfuscator_helper');

		$response = new stdClass();
		$response->id = $recordId;

	    $response->data = $this->$model_ref->Get(array($this->$model_ref->_pk() => $recordId));
		$response->data->cloudDataStart = json_decode($response->data->cloudDataStart);
		$response->data->cloudDataFinish = json_decode($response->data->cloudDataFinish);

		$response->profile = $this->profile_model->Get(array('profileId'=>$response->data->profileId));
		unset($response->data->profileId);

		$response->data->cloudId = IdObfuscator::encode($response->data->cloudId);
		$response->data->cloudLink = "http://www.cloud-artist.com/ck/".$response->data->cloudId;

	    header('Content-type: application/json');
		echo json_encode($response);
	}

	function listing($pProfileId = 0)
	{
		$model_ref = $this->profile['model'];
		$this->load->model($model_ref);

	    $response = new stdClass();
	    $response->data = $this->$model_ref->Get(array('profileId'=>$pProfileId,'sortBy'=>$this->$model_ref->_ds(),'sortDirection'=>'DESC'));

		foreach ($response->data as $key => $value) {
			unset($response->data[$key]->cloudDataStart);
			unset($response->data[$key]->cloudDataFinish);
			$response->data[$key]->cloudTimeStamp = date('d M Y', strtotime($response->data[$key]->cloudTimeStamp));
		}

	    header('Content-type: application/json');
		echo json_encode($response);
	}
}
